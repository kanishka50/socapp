@page "/cart"
@using CozyComfort.Shared.DTOs.Seller
@using CozyComfort.BlazorApp.Services.Interfaces
@inject ISellerService SellerService
@inject NavigationManager Navigation
@inject SimpleSessionService SessionService

<PageTitle>Shopping Cart - CozyComfort</PageTitle>

<div class="container mt-4">
    <h2>Shopping Cart</h2>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (cart?.Items?.Any() == true)
    {
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in cart.Items)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(item.ImageUrl))
                                                {
                                                    <img src="@item.ImageUrl" alt="@item.ProductName"
                                                         class="img-thumbnail me-3" style="width: 80px; height: 80px;">
                                                }
                                                <div>
                                                    <h6 class="mb-0">@item.ProductName</h6>
                                                    <small class="text-muted">SKU: @item.SKU</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>$@item.UnitPrice.ToString("F2")</td>
                                        <td>
                                            <div class="input-group" style="width: 120px;">
                                                <button class="btn btn-sm btn-outline-secondary"
                                                        @onclick="() => UpdateQuantity(item.ProductId, item.Quantity - 1)"
                                                        disabled="@(item.Quantity <= 1)">
                                                    -
                                                </button>
                                                <input type="text" class="form-control text-center"
                                                       value="@item.Quantity" readonly>
                                                <button class="btn btn-sm btn-outline-secondary"
                                                        @onclick="() => UpdateQuantity(item.ProductId, item.Quantity + 1)">
                                                    +
                                                </button>
                                            </div>
                                        </td>
                                        <td>$@((item.UnitPrice * item.Quantity).ToString("F2"))</td>
                                        <td>
                                            <button class="btn btn-sm btn-danger"
                                                    @onclick="() => RemoveItem(item.ProductId)">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Order Summary</h5>
                        <hr>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span>$@cart.SubTotal.ToString("F2")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tax:</span>
                            <span>$@cart.Tax.ToString("F2")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Shipping:</span>
                            <span>$@cart.ShippingCost.ToString("F2")</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Total:</strong>
                            <strong>$@cart.Total.ToString("F2")</strong>
                        </div>
                        <button class="btn btn-primary w-100" @onclick="ProceedToCheckout">
                            Proceed to Checkout
                        </button>
                        <button class="btn btn-link w-100 mt-2" @onclick="ContinueShopping">
                            Continue Shopping
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="bi bi-cart-x" style="font-size: 4rem; color: #ccc;"></i>
            <h4 class="mt-3">Your cart is empty</h4>
            <p class="text-muted">Add some cozy blankets to your cart!</p>
            <button class="btn btn-primary" @onclick="ContinueShopping">
                Start Shopping
            </button>
        </div>
    }
</div>

@code {
    private CartDto? cart;
    private bool isLoading = true;
    private string sessionId = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Get the shared session ID
        sessionId = SessionService.GetSessionId();
        Console.WriteLine($"Cart using session ID: {sessionId}");
        await LoadCart();
    }

    private async Task LoadCart()
    {
        try
        {
            isLoading = true;
            var response = await SellerService.GetCartAsync(sessionId);
            if (response.Success)
            {
                cart = response.Data;
                Console.WriteLine($"Loaded cart with {cart?.Items?.Count ?? 0} items");
            }
            else
            {
                Console.WriteLine($"Failed to load cart: {response.Message}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading cart: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task UpdateQuantity(int productId, int newQuantity)
    {
        if (newQuantity < 1) return;

        try
        {
            var response = await SellerService.UpdateCartItemAsync(sessionId, productId, newQuantity);
            if (response.Success)
            {
                cart = response.Data;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating quantity: {ex.Message}");
        }
    }

    private async Task RemoveItem(int productId)
    {
        try
        {
            var response = await SellerService.RemoveFromCartAsync(sessionId, productId);
            if (response.Success)
            {
                cart = response.Data;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error removing item: {ex.Message}");
        }
    }

    private void ProceedToCheckout()
    {
        Navigation.NavigateTo("/checkout");
    }

    private void ContinueShopping()
    {
        Navigation.NavigateTo("/shop");
    }
}