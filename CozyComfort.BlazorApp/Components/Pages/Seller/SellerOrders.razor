@page "/seller/orders"
@attribute [Authorize(Roles = "Seller,Administrator")]
@inject ISellerService SellerService
@inject NavigationManager Navigation

<PageTitle>Orders Management - Seller</PageTitle>

<div class="container-fluid p-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-md-6">
            <h3>Orders Management</h3>
        </div>
        <div class="col-md-6 text-end">
            <button class="btn btn-primary me-2" @onclick="() => Navigation.NavigateTo('/seller/orders/create-distributor-order')">
                <i class="bi bi-plus-circle"></i> New Distributor Order
            </button>
            <button class="btn btn-secondary" @onclick="RefreshOrders">
                <i class="bi bi-arrow-clockwise"></i> Refresh
            </button>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading orders...</span>
            </div>
        </div>
    }
    else if (combinedOrders != null)
    {
        <!-- Tabs for different order types -->
        <ul class="nav nav-tabs mb-4">
            <li class="nav-item">
                <button class="nav-link @(activeTab == "customer" ? "active" : "")"
                        @onclick="() => activeTab = 'customer'">
                    Customer Orders (@combinedOrders.TotalCustomerOrders)
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link @(activeTab == "distributor" ? "active" : "")"
                        @onclick="() => activeTab = 'distributor'">
                    Distributor Orders (@combinedOrders.TotalDistributorOrders)
                </button>
            </li>
        </ul>

        @if (activeTab == "customer")
        {
            <!-- Customer Orders Table -->
            <div class="card">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Order #</th>
                                    <th>Customer</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                    <th>Items</th>
                                    <th>Amount</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in combinedOrders.CustomerOrders)
                                {
                                    <tr>
                                        <td>@order.OrderNumber</td>
                                        <td>@order.CustomerName</td>
                                        <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                        <td>
                                            <span class="badge @GetStatusBadgeClass(order.Status)">
                                                @order.Status
                                            </span>
                                        </td>
                                        <td>@order.ItemCount</td>
                                        <td>$@order.TotalAmount.ToString("N2")</td>
                                        <td>
                                            <button class="btn btn-sm btn-outline-primary"
                                                    @onclick="() => ViewOrderDetails(order.Id, 'customer')">
                                                View
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <!-- Distributor Orders Table -->
            <div class="card">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Order #</th>
                                    <th>Distributor Order #</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                    <th>Items</th>
                                    <th>Amount</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in combinedOrders.DistributorOrders)
                                {
                                    <tr>
                                        <td>@order.OrderNumber</td>
                                        <td>@order.DistributorOrderNumber</td>
                                        <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                        <td>
                                            <span class="badge @GetStatusBadgeClass(order.Status)">
                                                @order.Status
                                            </span>
                                        </td>
                                        <td>@order.ItemCount</td>
                                        <td>$@order.TotalAmount.ToString("N2")</td>
                                        <td>
                                            <button class="btn btn-sm btn-outline-primary"
                                                    @onclick="() => ViewOrderDetails(order.Id, 'distributor')">
                                                View
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private CombinedOrdersDto? combinedOrders;
    private bool isLoading = true;
    private string activeTab = "customer";

    protected override async Task OnInitializedAsync()
    {
        await LoadOrders();
    }

    private async Task LoadOrders()
    {
        try
        {
            isLoading = true;
            var response = await SellerService.GetCombinedOrdersAsync(new PagedRequest { PageNumber = 1, PageSize = 50 });

            if (response.Success)
            {
                combinedOrders = response.Data;
            }
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ViewOrderDetails(int orderId, string orderType)
    {
        Navigation.NavigateTo($"/seller/orders/{orderType}/{orderId}");
    }

    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "pending" => "bg-warning text-dark",
            "accepted" => "bg-success",
            "cancelled" => "bg-danger",
            "completed" => "bg-info",
            _ => "bg-secondary"
        };
    }

    private async Task RefreshOrders()
    {
        await LoadOrders();
    }
}